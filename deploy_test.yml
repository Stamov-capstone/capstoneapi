version: '3.8'



services:
  codedevteacherapi:
    image: jafarijason/codedevteacherapi_${BRANCH_NAME}:${APP_VERSION}
    networks:
      - traefik-public
    env_file:
      - .env
    deploy:
      mode: replicated
      restart_policy:
        condition: any
      placement:
        constraints:
          # - node.role == worker
          - node.role == manager
      replicas: 2
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.codedevteacherapi-http.rule=Host(`${APP_DOMAIN?Variable not set}`)
        - traefik.http.routers.codedevteacherapi-http.entrypoints=http
        - traefik.http.routers.codedevteacherapi-http.middlewares=https-redirect
        - traefik.http.routers.codedevteacherapi-https.rule=Host(`${APP_DOMAIN?Variable not set}`)
        - traefik.http.routers.codedevteacherapi-https.entrypoints=https
        - traefik.http.routers.codedevteacherapi-https.tls=true
        - traefik.http.routers.codedevteacherapi-https.tls.certresolver=le
        - traefik.http.services.codedevteacherapi.loadbalancer.server.port=${APP_PORT}
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 5s
      rollback_config:
        parallelism: 0
        order: stop-first
    # healthcheck:
    #   test: ["CMD", "./healthCheck.sh", "${APP_PORT}"]





networks:
  traefik-public:
    external: true
